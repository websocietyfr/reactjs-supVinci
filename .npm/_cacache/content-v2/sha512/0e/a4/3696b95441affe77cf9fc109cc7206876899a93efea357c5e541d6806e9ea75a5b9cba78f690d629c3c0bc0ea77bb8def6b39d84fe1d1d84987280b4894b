{"_id":"@expo/ngrok","_rev":"80-a92773e31c83c0e96f86c1d0792a16bf","name":"@expo/ngrok","dist-tags":{"next":"4.1.3","latest":"4.1.3"},"versions":{"2.2.7":{"name":"@expo/ngrok","version":"2.2.7","keywords":["ngrok","localhost","tunneling","localtunnel","webhook"],"author":{"name":"bubenshchykov"},"license":"BSD-2-Clause","_id":"@expo/ngrok@2.2.7","maintainers":[{"name":"wilzh40","email":"wilzh40@gmail.com"}],"homepage":"https://github.com/expo/ngrok#readme","bugs":{"url":"https://github.com/expo/ngrok/issues"},"bin":{"ngrok":"./bin/ngrok"},"dist":{"shasum":"00b3015441da12a3df0b4cb8b4763b9e47105e91","tarball":"https://registry.npmjs.org/@expo/ngrok/-/ngrok-2.2.7.tgz","integrity":"sha512-suYYTuNGsLT9w+3Z5h/eKJmHsmr1z2BXH7Z/oI89l5PBN2Z4zd3naeNUr0Ch+tAQcuf3gPOSyedhzjNn6ObRKw==","signatures":[{"sig":"MEYCIQCC3+STyHDAfGJ4r18/5xRmUd65I4fMYII1tRu1BPEh0wIhAOrIg46ORagxR6ENiMV556ntpW3qmzj7QQ86jlQPaBty","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}]},"main":"index.js","_from":".","files":["index.js","postinstall.js","bin"],"_shasum":"00b3015441da12a3df0b4cb8b4763b9e47105e91","gitHead":"9c06ce494e24d7e0995ae3ab25bfc3d49bddc5c2","scripts":{"test":"node ./node_modules/mocha/bin/_mocha","postupdate":"node ./postinstall.js","postinstall":"node ./postinstall.js"},"_npmUser":{"name":"wilzh40","email":"wilzh40@gmail.com"},"repository":{"url":"git://github.com/expo/ngrok.git","type":"git"},"_npmVersion":"4.2.0","description":"node wrapper for ngrok","directories":{},"_nodeVersion":"8.0.0","dependencies":{"lock":"^0.1.2","uuid":"^3.0.0","async":"^0.9.0","request":"^2.81.0","decompress-zip":"^0.3.0"},"devDependencies":{"chai":"~1.8.1","mocha":"~1.14.0","homedir":"^0.6.0"},"_npmOperationalInternal":{"tmp":"tmp/ngrok-2.2.7.tgz_1499120276516_0.6226705843582749","host":"s3://npm-registry-packages"}},"2.2.8":{"name":"@expo/ngrok","version":"2.2.8","keywords":["ngrok","localhost","tunneling","localtunnel","webhook"],"author":{"name":"bubenshchykov"},"license":"BSD-2-Clause","_id":"@expo/ngrok@2.2.8","maintainers":[{"name":"wilzh40","email":"wilzh40@gmail.com"},{"name":"jesseruder","email":"jesse@sixfivezero.net"},{"name":"terribleben","email":"ben@exp.host"},{"name":"ccheever","email":"ccheever@gmail.com"},{"name":"dikaiosune","email":"adam.n.perry@gmail.com"},{"name":"nikki93","email":"s.nikhilesh@gmail.com"},{"name":"brentvatne","email":"brentvatne@gmail.com"},{"name":"skevy","email":"adam@sk3vy.com"},{"name":"ide","email":"ide+npm@jameside.com"},{"name":"expoadmin","email":"exponent.team@gmail.com"}],"homepage":"https://github.com/expo/ngrok#readme","bugs":{"url":"https://github.com/expo/ngrok/issues"},"bin":{"ngrok":"./bin/ngrok"},"dist":{"shasum":"c4fb73df630fee19cc9478ef68bc6836198d525c","tarball":"https://registry.npmjs.org/@expo/ngrok/-/ngrok-2.2.8.tgz","integrity":"sha512-ybLKof9FyVAhNY+hVyGVQF2Br65uyYfrkBNTdiyxfObiHdSn8zvrZ/B62a3E0bbnb6f9VSpcVSfvEJtPqG0wMg==","signatures":[{"sig":"MEUCIQDN6riB/F8e9wdI05noXihFdtf33Cj1onV76Aeq1DykEwIgQqDDgfuIDp2deZf+A0RpNZAN250k1/yt6RlwiDceuMk=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}]},"main":"index.js","files":["index.js","postinstall.js","bin"],"gitHead":"fa44144c489536e5bf946a56532ecb0624e8faaa","scripts":{"test":"node ./node_modules/mocha/bin/_mocha","postupdate":"node ./postinstall.js","postinstall":"node ./postinstall.js"},"_npmUser":{"name":"jesseruder","email":"jesse@sixfivezero.net"},"repository":{"url":"git://github.com/expo/ngrok.git","type":"git"},"_npmVersion":"5.3.0","description":"node wrapper for ngrok","directories":{},"_nodeVersion":"8.2.1","dependencies":{"lock":"^0.1.2","uuid":"^3.0.0","async":"^0.9.0","request":"^2.81.0","decompress-zip":"^0.3.0"},"devDependencies":{"chai":"~1.8.1","mocha":"~1.14.0","homedir":"^0.6.0"},"_npmOperationalInternal":{"tmp":"tmp/ngrok-2.2.8.tgz_1502225769843_0.8861092834267765","host":"s3://npm-registry-packages"}},"2.2.9":{"name":"@expo/ngrok","version":"2.2.9","keywords":["ngrok","localhost","tunneling","localtunnel","webhook"],"author":{"name":"bubenshchykov"},"license":"BSD-2-Clause","_id":"@expo/ngrok@2.2.9","maintainers":[{"name":"wilzh40","email":"wilzh40@gmail.com"},{"name":"jesseruder","email":"jesse@sixfivezero.net"},{"name":"terribleben","email":"ben@exp.host"},{"name":"ccheever","email":"ccheever@gmail.com"},{"name":"dikaiosune","email":"adam.n.perry@gmail.com"},{"name":"nikki93","email":"s.nikhilesh@gmail.com"},{"name":"brentvatne","email":"brentvatne@gmail.com"},{"name":"skevy","email":"adam@sk3vy.com"},{"name":"ide","email":"ide+npm@jameside.com"},{"name":"expoadmin","email":"exponent.team@gmail.com"}],"homepage":"https://github.com/expo/ngrok#readme","bugs":{"url":"https://github.com/expo/ngrok/issues"},"bin":{"ngrok":"./bin/ngrok"},"dist":{"shasum":"7718d93ba0357c6157de319fd9f7ed8094038192","tarball":"https://registry.npmjs.org/@expo/ngrok/-/ngrok-2.2.9.tgz","integrity":"sha512-fHr2ylTGb3mX2mgmW1a4S348Ze31rkmIBYIWjZtT/DeV6fMGQurybu9QaGw/V9PILk1crkrGk2Dangq9tQaZFQ==","signatures":[{"sig":"MEUCIBvMSggRI2b+Y55JTBGeLbOHxidoShPKZByJXhdwXIt3AiEAry9B58vTG+isT8rO5oi2xa2gJ3rIp6LmYm7LREzlPLc=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}]},"main":"index.js","_from":".","files":["index.js","postinstall.js","bin"],"_shasum":"7718d93ba0357c6157de319fd9f7ed8094038192","gitHead":"b46d637ec5f8e48c0ff0716b41b48ab32ba31572","scripts":{"test":"node ./node_modules/mocha/bin/_mocha","postupdate":"node ./postinstall.js","postinstall":"node ./postinstall.js"},"_npmUser":{"name":"dikaiosune","email":"adam.n.perry@gmail.com"},"repository":{"url":"git://github.com/expo/ngrok.git","type":"git"},"_npmVersion":"4.6.1","description":"node wrapper for ngrok","directories":{},"_nodeVersion":"8.1.3","dependencies":{"lock":"^0.1.2","uuid":"^3.0.0","async":"^0.9.0","request":"^2.81.0","decompress-zip":"^0.3.0"},"devDependencies":{"chai":"~1.8.1","mocha":"~1.14.0","homedir":"^0.6.0"},"_npmOperationalInternal":{"tmp":"tmp/ngrok-2.2.9.tgz_1502476361440_0.3631234555505216","host":"s3://npm-registry-packages"}},"2.3.0":{"name":"@expo/ngrok","version":"2.3.0","keywords":["ngrok","localhost","tunneling","localtunnel","webhook"],"author":{"name":"bubenshchykov"},"license":"BSD-2-Clause","_id":"@expo/ngrok@2.3.0","maintainers":[{"name":"fson","email":"ville.immonen@iki.fi"},{"name":"abi","email":"abimanyuraja@gmail.com"},{"name":"jesseruder","email":"jesse@sixfivezero.net"},{"name":"terribleben","email":"ben@exp.host"},{"name":"ccheever","email":"ccheever@gmail.com"},{"name":"dikaiosune","email":"adam.n.perry@gmail.com"},{"name":"nikki93","email":"s.nikhilesh@gmail.com"},{"name":"brentvatne","email":"brentvatne@gmail.com"},{"name":"skevy","email":"adam@sk3vy.com"},{"name":"ide","email":"ide+npm@jameside.com"},{"name":"expoadmin","email":"exponent.team@gmail.com"}],"homepage":"https://github.com/expo/ngrok#readme","bugs":{"url":"https://github.com/expo/ngrok/issues"},"bin":{"ngrok":"./bin/ngrok"},"dist":{"shasum":"e6c37c74c2ede6c32f04b13d30383e10255908d3","tarball":"https://registry.npmjs.org/@expo/ngrok/-/ngrok-2.3.0.tgz","integrity":"sha512-zLAl2gzBs4ddqnmYYVTzQpxnTlF8iK/CMWNpngZfgrhrmzDVzTNNy4+hu0PjKuXIubfyWHy+wtp+wgewOUj9KA==","signatures":[{"sig":"MEYCIQDQu+fdNSLDST3lYo9XYg64PPYUNDuP2ibmvFEPmsPRKgIhAKSFG6ROuJwWqdh2o3/W5J/KsGnRO0m2rxkVFaLNbB+T","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}]},"main":"index.js","files":["index.js","postinstall.js","bin"],"gitHead":"0b82126f3f877244f9a2022084fffeb016f2ce82","scripts":{"test":"node ./node_modules/mocha/bin/_mocha","postupdate":"node ./postinstall.js","postinstall":"node ./postinstall.js"},"_npmUser":{"name":"fson","email":"ville.immonen@iki.fi"},"repository":{"url":"git://github.com/expo/ngrok.git","type":"git"},"_npmVersion":"5.5.1","description":"node wrapper for ngrok","directories":{},"_nodeVersion":"8.5.0","dependencies":{"lock":"^0.1.2","uuid":"^3.0.0","async":"^0.9.0","logfmt":"^1.2.0","request":"^2.81.0","decompress-zip":"^0.3.0"},"devDependencies":{"chai":"~1.8.1","mocha":"~1.14.0","sinon":"^4.1.2","homedir":"^0.6.0"},"_npmOperationalInternal":{"tmp":"tmp/ngrok-2.3.0.tgz_1510858119484_0.08566191466525197","host":"s3://npm-registry-packages"}},"2.4.0":{"name":"@expo/ngrok","version":"2.4.0","keywords":["ngrok","localhost","tunneling","localtunnel","webhook"],"author":{"name":"bubenshchykov"},"license":"BSD-2-Clause","_id":"@expo/ngrok@2.4.0","maintainers":[{"name":"abi","email":"abimanyuraja@gmail.com"},{"name":"anp","email":"adam.n.perry@gmail.com"},{"name":"brentvatne","email":"brentvatne@gmail.com"},{"name":"ccheever","email":"ccheever@gmail.com"},{"name":"dikaiosune","email":"adam.n.perry@gmail.com"},{"name":"evanbacon","email":"baconbrix@gmail.com"},{"name":"expoadmin","email":"support@expo.io"},{"name":"fson","email":"ville.immonen@iki.fi"},{"name":"ide","email":"ide+npm@jameside.com"},{"name":"jesseruder","email":"jesse@sixfivezero.net"},{"name":"nikki93","email":"s.nikhilesh@gmail.com"},{"name":"terribleben","email":"ben@exp.host"}],"homepage":"https://github.com/expo/ngrok#readme","bugs":{"url":"https://github.com/expo/ngrok/issues"},"dist":{"shasum":"960369acfc1cf76d0385703153f6a2a508898b72","tarball":"https://registry.npmjs.org/@expo/ngrok/-/ngrok-2.4.0.tgz","fileCount":4,"integrity":"sha512-CRA3y6ubGibFzUIAFRHWg45Ou7afWJh9aOd5Jz5/GJIbfYBZ4kzxZv4d5sAiIDuo7WgjU0fXpQFuT0G8hXLASQ==","signatures":[{"sig":"MEYCIQDrXrg3+dRB+pccLzxPGEqF2tede0YL5g6fPAXEAA6WzAIhAKOE6C+nHiWbajB1g/sqrUyaq1Z2CjtEoTKwJW3EAsGZ","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":10727},"main":"index.js","files":["index.js"],"gitHead":"21f0d69e6d01aa723778f04465ba1ac85623b5d0","scripts":{"test":"node ./node_modules/mocha/bin/_mocha"},"_npmUser":{"name":"fson","email":"ville.immonen@iki.fi"},"repository":{"url":"git://github.com/expo/ngrok.git","type":"git"},"_npmVersion":"5.6.0","description":"node wrapper for ngrok","directories":{},"_nodeVersion":"9.8.0","dependencies":{"lock":"^0.1.2","uuid":"^3.0.0","async":"^0.9.0","logfmt":"^1.2.0","request":"^2.81.0","decompress-zip":"^0.3.0","@expo/ngrok-bin":"2.2.8-beta.1"},"_hasShrinkwrap":false,"devDependencies":{"chai":"~1.8.1","mocha":"~1.14.0","sinon":"^4.1.2","homedir":"^0.6.0"},"_npmOperationalInternal":{"tmp":"tmp/ngrok_2.4.0_1521126507081_0.5331584697547147","host":"s3://npm-registry-packages"}},"2.4.1":{"name":"@expo/ngrok","version":"2.4.1","keywords":["ngrok","localhost","tunneling","localtunnel","webhook"],"author":{"name":"bubenshchykov"},"license":"BSD-2-Clause","_id":"@expo/ngrok@2.4.1","maintainers":[{"name":"abi","email":"abimanyuraja@gmail.com"},{"name":"anp","email":"adam.n.perry@gmail.com"},{"name":"brentvatne","email":"brentvatne@gmail.com"},{"name":"ccheever","email":"ccheever@gmail.com"},{"name":"dikaiosune","email":"adam.n.perry@gmail.com"},{"name":"evanbacon","email":"baconbrix@gmail.com"},{"name":"expoadmin","email":"support@expo.io"},{"name":"fson","email":"ville.immonen@iki.fi"},{"name":"ide","email":"ide+npm@jameside.com"},{"name":"jesseruder","email":"jesse@sixfivezero.net"},{"name":"nikki93","email":"s.nikhilesh@gmail.com"},{"name":"terribleben","email":"ben@exp.host"}],"homepage":"https://github.com/expo/ngrok#readme","bugs":{"url":"https://github.com/expo/ngrok/issues"},"dist":{"shasum":"23171679c730b6b140cbd22b9343ac6d7665e2d1","tarball":"https://registry.npmjs.org/@expo/ngrok/-/ngrok-2.4.1.tgz","fileCount":4,"integrity":"sha512-vfzbCIEIyieSSldFVrKS5J+H2mDcezDx1o7YOXPfHcdwvC9iO5R5NZRshFmtV8jn5IBYsSEiIHPvqghebdUqCA==","signatures":[{"sig":"MEYCIQDMteE7gkRGMcxeco8K/osTd2uue74MFs1jyR70+LHCFAIhAN38fuUMzpTmHrDJTrCOD+4SJOgz/U9993Up/6gmzlk4","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":10720},"main":"index.js","files":["index.js"],"gitHead":"dbbd4f3ed8de7b301936bc6ebdcaea4a0143d1e9","scripts":{"test":"node ./node_modules/mocha/bin/_mocha"},"_npmUser":{"name":"fson","email":"ville.immonen@iki.fi"},"repository":{"url":"git://github.com/expo/ngrok.git","type":"git"},"_npmVersion":"5.6.0","description":"node wrapper for ngrok","directories":{},"_nodeVersion":"9.8.0","dependencies":{"lock":"^0.1.2","uuid":"^3.0.0","async":"^0.9.0","logfmt":"^1.2.0","request":"^2.81.0","decompress-zip":"^0.3.0","@expo/ngrok-bin":"2.2.8"},"_hasShrinkwrap":false,"devDependencies":{"chai":"~1.8.1","mocha":"~1.14.0","sinon":"^4.1.2","homedir":"^0.6.0"},"_npmOperationalInternal":{"tmp":"tmp/ngrok_2.4.1_1521128014021_0.9841935321759099","host":"s3://npm-registry-packages"}},"2.4.2":{"name":"@expo/ngrok","version":"2.4.2","keywords":["ngrok","localhost","tunneling","localtunnel","webhook"],"author":{"name":"bubenshchykov"},"license":"BSD-2-Clause","_id":"@expo/ngrok@2.4.2","maintainers":[{"name":"abi","email":"abimanyuraja@gmail.com"},{"name":"anp","email":"adam.n.perry@gmail.com"},{"name":"brentvatne","email":"brentvatne@gmail.com"},{"name":"ccheever","email":"ccheever@gmail.com"},{"name":"dikaiosune","email":"adam.n.perry@gmail.com"},{"name":"evanbacon","email":"baconbrix@gmail.com"},{"name":"expoadmin","email":"support@expo.io"},{"name":"fson","email":"ville.immonen@iki.fi"},{"name":"ide","email":"ide+npm@jameside.com"},{"name":"jesseruder","email":"jesse@sixfivezero.net"},{"name":"nikki93","email":"s.nikhilesh@gmail.com"},{"name":"terribleben","email":"ben@exp.host"}],"homepage":"https://github.com/expo/ngrok#readme","bugs":{"url":"https://github.com/expo/ngrok/issues"},"dist":{"shasum":"cb304ca49913b8bc23550407fb4f8b25f3e76a9a","tarball":"https://registry.npmjs.org/@expo/ngrok/-/ngrok-2.4.2.tgz","fileCount":4,"integrity":"sha512-x2VbnHVyaID2zGqfX2fD2Ui8as+bebhV6IFODSVhSSsKTSke+ORviLkvEZJgd5Hlz6WgRzuCAtqMkxXb1G6o6Q==","signatures":[{"sig":"MEUCIQCxgLC7TcJ0acrv5I8SxAGWdasaV6UCy6fagLau2MlUxQIgQKSxslCKg2EyZoHENIG0QtzKd/CmKJ/j+iWdiV1RFrM=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":10695},"main":"index.js","files":["index.js"],"gitHead":"2826bc7df3828b6bb76d76d67fa7d138bf4c8335","scripts":{"test":"node ./node_modules/mocha/bin/_mocha"},"_npmUser":{"name":"fson","email":"ville.immonen@iki.fi"},"repository":{"url":"git://github.com/expo/ngrok.git","type":"git"},"_npmVersion":"5.6.0","description":"node wrapper for ngrok","directories":{},"_nodeVersion":"9.8.0","dependencies":{"lock":"^0.1.2","uuid":"^3.0.0","async":"^0.9.0","logfmt":"^1.2.0","request":"^2.81.0","@expo/ngrok-bin":"2.2.8-beta.3"},"_hasShrinkwrap":false,"devDependencies":{"chai":"~1.8.1","mocha":"~1.14.0","sinon":"^4.1.2","homedir":"^0.6.0"},"_npmOperationalInternal":{"tmp":"tmp/ngrok_2.4.2_1521211215943_0.1955586355499339","host":"s3://npm-registry-packages"}},"2.4.3":{"name":"@expo/ngrok","version":"2.4.3","keywords":["ngrok","localhost","tunneling","localtunnel","webhook"],"author":{"name":"bubenshchykov"},"license":"BSD-2-Clause","_id":"@expo/ngrok@2.4.3","maintainers":[{"name":"brentvatne","email":"brentvatne@gmail.com"},{"name":"ccheever","email":"ccheever@gmail.com"},{"name":"dsokal","email":"dominiksokal@gmail.com"},{"name":"esamelson","email":"eric@expo.io"},{"name":"evanbacon","email":"baconbrix@gmail.com"},{"name":"expoadmin","email":"support@expo.io"},{"name":"fson","email":"ville.immonen@iki.fi"},{"name":"ide","email":"ide+npm@jameside.com"},{"name":"jakubste","email":"jakub.ste@gmail.com"},{"name":"jesseruder","email":"jesseruder@gmail.com"},{"name":"nikki93","email":"s.nikhilesh@gmail.com"},{"name":"quinlanj","email":"quinlanjung@gmail.com"},{"name":"sjchmiela","email":"sjchmiela@gmail.com"},{"name":"terribleben","email":"ben@exp.host"},{"name":"tsapeta","email":"sapeta.tomasz@gmail.com"}],"homepage":"https://github.com/expo/ngrok#readme","bugs":{"url":"https://github.com/expo/ngrok/issues"},"dist":{"shasum":"77e1a7a3e76542358647cd0117c246ea1afe4bc1","tarball":"https://registry.npmjs.org/@expo/ngrok/-/ngrok-2.4.3.tgz","fileCount":4,"integrity":"sha512-JOct+0BMTOTkTb2RreQc6uzhwCjX8Z/EYRo3EcbHMr5/3Zk+0YuujaM4Z84GeZcWz2sBMhnJj0LeJnhEkmd95Q==","signatures":[{"sig":"MEYCIQDu/u6cziqSezMzYEAq+Xtbao6SwOT+28DzrbS4onRSNQIhAPMtqFEEbL0tT0nKsPW5i5ELtAg8vvE2YjbuFlVv69SL","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":10724,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcBTLiCRA9TVsSAnZWagAAEDcP/Rw0xiAUHB6D0fk0s3gc\n4YoC8RNOulxwYfrqhh+Ate/bISn4uZmkkI663U/zI3BV6kP/wG0biiE5sRnC\naHOirMOCvZoCtCOlG3VjTY7OKw3bhf1BrQXyeBMdiolW9UWjP5QdrbVJGmBc\n6ZAIAyd9QAmmSUzYJ8nw5bkDa4Utgb4fh+aMYpSfjjZomQ4xMw6kdQ9auLLo\n7Br1CXGCaLWCIUl8erThnUiywfLqOIVooKgRsEvtMirhfp/2ihdsUYjWxwTu\nuPcV42l6d1c8DyQTfk3/nRTuhJPpmSaS20G2uRNz/C6uQRXOVSD8eSXSTnK2\nrXHVYiELRUPjJfBxC4tEmkqUdad4NJyhogE1mSHNe5EXbWOb+2P+r5QsDvl7\n62c55PqCyWReIME4AH6j1tygAmnvDkRGeU3a7YICEzQ/5WdUV3kF9+mJ3Iqc\nSwC2rX5Ecdw9m+MeFirQ7KWQOR4mfAqvWNZaMX7azUwu54TmU/PQiSM1mtht\nfZiU9YnVZ9XATfNWG7Gnv9CjHQNtl4B9vGCvHr20dJXuvkm0TL1vv6HimSHK\nfqnyrQfJB1EEzj3GddzQECSqz3JhC1+Qj0gDkWwaN/REar6WlRvzNRnq44am\nRQoQz5pOFJL/riszNIndA+4v5/WMrOZEfS6WRFvNwNW4uYADBR2CJOZMeJQx\nWhWM\r\n=P5kp\r\n-----END PGP SIGNATURE-----\r\n"},"main":"index.js","gitHead":"2d035b461d1ef9b5d167e1fecf79c5ce45a8da2a","scripts":{"test":"node ./node_modules/mocha/bin/_mocha"},"_npmUser":{"name":"fson","email":"ville.immonen@iki.fi"},"repository":{"url":"git://github.com/expo/ngrok.git","type":"git"},"_npmVersion":"6.4.1","description":"node wrapper for ngrok","directories":{},"_nodeVersion":"11.2.0","dependencies":{"lock":"^0.1.2","uuid":"^3.0.0","async":"^0.9.0","logfmt":"^1.2.0","request":"^2.81.0","@expo/ngrok-bin":"2.2.8-beta.3"},"_hasShrinkwrap":false,"devDependencies":{"chai":"~1.8.1","mocha":"~1.14.0","sinon":"^4.1.2","homedir":"^0.6.0"},"_npmOperationalInternal":{"tmp":"tmp/ngrok_2.4.3_1543844577204_0.57668238283062","host":"s3://npm-registry-packages"}},"2.5.0":{"name":"@expo/ngrok","version":"2.5.0","keywords":["ngrok","localhost","tunneling","localtunnel","webhook"],"author":{"name":"bubenshchykov"},"license":"BSD-2-Clause","_id":"@expo/ngrok@2.5.0","maintainers":[{"name":"haydendaly","email":"haydencdaly@gmail.com"},{"name":"kudochien","email":"ckchien@gmail.com"},{"name":"andyboythekid","email":"andydevs123@gmail.com"},{"name":"princefleaswallow","email":"mhampton@hey.com"},{"name":"ide","email":"ide+npm@jameside.com"},{"name":"brentvatne","email":"brentvatne@gmail.com"},{"name":"ccheever","email":"ccheever@gmail.com"},{"name":"evanbacon","email":"baconbrix@gmail.com"},{"name":"quinlanj","email":"quinlanjung@gmail.com"},{"name":"esamelson","email":"eric@expo.io"},{"name":"fson","email":"ville.immonen@iki.fi"},{"name":"expoadmin","email":"support@expo.io"},{"name":"charliecruzan","email":"charliecruzan@gmail.com"},{"name":"tsapeta","email":"npm@tsapeta.com"},{"name":"dsokal","email":"dominiksokal@gmail.com"},{"name":"tcdavis","email":"tc@expo.io"},{"name":"exponent","email":"exponent.team@gmail.com"},{"name":"wschurman","email":"wschurman@gmail.com"},{"name":"bbarthec","email":"bartlomiejbukowski.b@gmail.com"},{"name":"jkhales","email":"jonathan@expo.io"},{"name":"wkozyra","email":"wojciech.kozyra@swmansion.com"},{"name":"bycedric","email":"me@bycedric.com"},{"name":"lukmccall","email":"kosmatylukasz@gmail.com"},{"name":"jonsamp","email":"sampjon@gmail.com"}],"homepage":"https://github.com/expo/ngrok#readme","bugs":{"url":"https://github.com/expo/ngrok/issues"},"dist":{"shasum":"53bf7ed1c2291897b3fb7a6503d509250468ce41","tarball":"https://registry.npmjs.org/@expo/ngrok/-/ngrok-2.5.0.tgz","fileCount":4,"integrity":"sha512-+Igfl5NNxH9uTZ+zSD+3B8KxMHKw8uvzLpvb1sQxJuWHaaWoPEyYmaDeGxRPGCjCE+zzK9C1NhNCeid+9CXJfA==","signatures":[{"sig":"MEQCIAnSah0PqEul49UV/PzpioCk7ZpXukClVy6eV7Y/5BttAiAaskt6x8ECumHsR2C7h7/fdUViXY5vgTIiIsunGq1zjg==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":10897,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh2Gg9CRA9TVsSAnZWagAAw1YP/jU/xXp0V6spN5vu19OU\n7wf0CUa9P+emBy3iddOaTEmTA7bG0HYdXlhdQpgN+fYwfzNYWPY8MWXHIpCB\nl9iBQEuJ8t7u6Y1ga2CkK3eCEvcsZboESXh3bBKZCZK/x5AWboyiedWjkSoQ\nGTK7zZ5bEhdY9GYmSYz+wub9C3+ji2y8H1F6w/rn1cam2s4I6noYzZ8xy0OK\noUGYjXUDMkXyZlEEENXDvkgaLvPUecPhyQ/ObQcr+H8CEDHP4S0/eBcSAsMg\nymna/W29om2P83G0tUtb7W8064y0cSxCWvivWS0b5N7YpfJKZOebHIEywe70\nL+OKVh26WNy2UrSHJ9xf58lNHy4H/40wBNQrKd+NpKKKZPfWuFzkIjCVwWFP\nOmg3j+ogHdqqCRvSpwEjCwJ4hVj08SdPIOlf4bEwxqUvA/sieyvqSLHrcXfJ\nLtmjMXOUh0qlVrvPOdxEFnLOvzyCBj74+Xgjup0k0qc/RYmsoREIbi4lg31u\nK2fE7YJvquzrfF9mfN5jkqZ+0XdBUHEbq2ITeCYxNA9SrBKngaMMU5n2ovDn\nwgOdUCnFC6jhX+ip0oZqAWsyCM+5EaFBJ1VKTDT/BXwCHeecGO2SHlaHDtf3\nWXcD0QzDRbjNn2SaTYAa8zhRaV4vWSeOQNIyiVg+cdGfe/C/d5W3KciWFqSh\nOTrT\r\n=YeJ9\r\n-----END PGP SIGNATURE-----\r\n"},"main":"index.js","gitHead":"f10ee92430ff98e406ada2690283e5ef58d8ae40","scripts":{"test":"node ./node_modules/mocha/bin/_mocha"},"_npmUser":{"name":"kudochien","email":"ckchien@gmail.com"},"repository":{"url":"git+https://github.com/expo/ngrok.git","type":"git"},"_npmVersion":"7.11.2","description":"node wrapper for ngrok","directories":{},"_nodeVersion":"16.1.0","dependencies":{"lock":"^0.1.2","uuid":"^3.0.0","async":"^0.9.0","logfmt":"^1.2.0","request":"^2.81.0","@expo/ngrok-bin":"2.3.40"},"_hasShrinkwrap":false,"devDependencies":{"chai":"~1.8.1","mocha":"~1.14.0","sinon":"^4.1.2","homedir":"^0.6.0"},"_npmOperationalInternal":{"tmp":"tmp/ngrok_2.5.0_1623435170264_0.016631460880864424","host":"s3://npm-registry-packages"}},"4.1.0":{"name":"@expo/ngrok","version":"4.1.0","keywords":["ngrok","localhost","tunneling","localtunnel","webhook"],"author":{"name":"bubenshchykov"},"license":"BSD-2-Clause","_id":"@expo/ngrok@4.1.0","maintainers":[{"name":"ide","email":"ide+npm@jameside.com"},{"name":"brentvatne","email":"brentvatne@gmail.com"},{"name":"ccheever","email":"ccheever@gmail.com"},{"name":"evanbacon","email":"baconbrix@gmail.com"},{"name":"quinlanj","email":"quinlanjung@gmail.com"},{"name":"esamelson","email":"eric@expo.io"},{"name":"fson","email":"ville.immonen@iki.fi"},{"name":"expoadmin","email":"support@expo.io"},{"name":"charliecruzan","email":"charliecruzan@gmail.com"},{"name":"tsapeta","email":"npm@tsapeta.com"},{"name":"dsokal","email":"dominiksokal@gmail.com"},{"name":"tcdavis","email":"tc@expo.io"},{"name":"exponent","email":"exponent.team@gmail.com"},{"name":"wschurman","email":"wschurman@gmail.com"},{"name":"bbarthec","email":"bartlomiejbukowski.b@gmail.com"},{"name":"jkhales","email":"jonathan@expo.io"},{"name":"wkozyra","email":"wojciech.kozyra@swmansion.com"},{"name":"bycedric","email":"me@bycedric.com"},{"name":"lukmccall","email":"kosmatylukasz@gmail.com"},{"name":"jonsamp","email":"sampjon@gmail.com"},{"name":"princefleaswallow","email":"mhampton@hey.com"},{"name":"andyboythekid","email":"andydevs123@gmail.com"},{"name":"kudochien","email":"ckchien@gmail.com"},{"name":"haydendaly","email":"haydencdaly@gmail.com"}],"homepage":"https://github.com/expo/ngrok#readme","bugs":{"url":"https://github.com/expo/ngrok/issues"},"dist":{"shasum":"d013ecc694c69132ba72d56562c42f7dc22bd517","tarball":"https://registry.npmjs.org/@expo/ngrok/-/ngrok-4.1.0.tgz","fileCount":7,"integrity":"sha512-PrtWxBt/SnOF1jZkf7oWznhEPFrmYKKeJPLVRKnEBd/y4eUYfoiNIXOzflIzhdrMubjWVI+pFuPJ6nkjVL95/Q==","signatures":[{"sig":"MEUCIFnVysfQRKlYD1DM/1qpekZfhkLspHVRaeSERCJuzT38AiEAwVn0UwA0sBVFwton6oyiSSt/A4qvMi7+Mnow22l8WpI=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":28118,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhCmVRCRA9TVsSAnZWagAAVjoP/1L6ElIJOZ25tDCm3ser\npDTI4CiQJfrNbbolNw974OyBi3aa3A4dFjna7/6Hs9tahv04V8LeygCgNsM4\nSFQjJPZI+tHYJrygFQKad5jSks0VCDUNuVktQHt0BmPXec5uLfildgVykjbo\nkTKSdG9RYEUtLHljKdueQTWhB/TVqal+xPl7JIhsD96yuP8MtKBOST9M3OZI\nHoamVJrmX9NMSJetqRzyHUITBYC/Y/wAPZVg90YpEw1o4svfb2ei6MuAVyfh\nCKAsJxjkXVtwiS8hl9uYjgzQmeS1QngCNuqB6dQe7A6RubIooFGDGgX5TNJt\naFA13iw2qBqojylRLzcJvVBlnNYgmoFaYQG8xeZPY85K+kWmL9j1f//YBKjB\n2x0Q52bies2Z8vgId6y2lDInISiyIb6M0KEszyRfH21DJGao3P4G4S+pUpcl\nElyXVZdlSvxjPVGQdlYQ3FYq4hLXKebPBXNKAI3goKOaXQanGf4/Lf1yTXpU\nJw6alhiHG8mcsvRLSDtyNS4J8491LhCEm6IWdpKYGE/l0s2xvywIB5RIdaAM\nGQk8Xtq926rOjk+yJVy1i6LJKoYT/YU4eHR4xebp2uO+6Xv4MNJ9KfJk8p+Q\n8NXOZkRC7kVkPcc3ZC1tcQVo6u4mH5WrKwe7RaA1NIMdyKLzJ9yLM6e0Tasx\nzlJY\r\n=OHDq\r\n-----END PGP SIGNATURE-----\r\n"},"main":"index.js","types":"ngrok.d.ts","readme":"# ngrok [![Tests](https://github.com/bubenshchykov/ngrok/workflows/Tests/badge.svg)](https://github.com/bubenshchykov/ngrok/actions) ![TypeScript compatible](https://img.shields.io/badge/typescript-compatible-brightgreen.svg) [![npm](https://img.shields.io/npm/v/ngrok.svg)](https://www.npmjs.com/package/ngrok) [![npm](https://img.shields.io/npm/dm/ngrok.svg)](https://www.npmjs.com/package/ngrok)\n\n![alt ngrok.com](https://ngrok.com/static/img/overview.png)\n\n* [Usage](#usage)\n  * [Local install](#local-install)\n  * [Global install](#global-install)\n  * [Auth Token](#auth-token)\n  * [Connect](#connect)\n    * [Options](#options)\n  * [Disconnect](#disconnect)\n  * [Config](#config)\n  * [Inspector](#inspector)\n  * [API](#api)\n    * [List tunnels](#list-tunnels)\n    * [Start tunnel](#start-tunnel)\n    * [Get tunnel details](#get-tunnel-details)\n    * [Stop tunnel](#stop-tunnel)\n    * [List requests](#list-requests)\n    * [Replay request](#replay-request)\n    * [Delete all requests](#delete-all-requests)\n    * [Request detail](#request-detail)\n  * [Proxy](#proxy)\n* [Expo changes](#expo-changes)\n* [How it works](#how-it-works)\n* [ngrok binary update](#ngrok-binary-update)\n* [Using with nodemon](#using-with-nodemon)\n* [Contributors](#contributors)\n* [Upgrading to version 4](#upgrading-to-version-4)\n  * [TypeScript](#typescript)\n\n## Usage\n\n### Local install\n\nInstall the package with npm:\n\n```bash\nnpm install ngrok\n```\n\nThen use `ngrok.connect()` to start ngrok and open a tunnel.\n\n```javascript\nconst ngrok = require('ngrok');\n(async function() {\n  const url = await ngrok.connect();\n})();\n```\n\nThis module uses `node>=10.19.0` with async/await. For a callback-based version use [2.3.0](https://github.com/bubenshchykov/ngrok/blob/330674233e3ec77688bb692bf1eb007810c4e30d/README.md).\n\n### Global install\n\n```bash\nnpm install ngrok -g\nngrok http 8080\n```\n\nFor global install on Linux, you might need to run `sudo npm install --unsafe-perm -g ngrok` due to the [nature](https://github.com/bubenshchykov/ngrok/issues/115#issuecomment-380927124) of npm postinstall script.\n\n### Auth Token\nYou can create basic http-https-tcp tunnel without an [authtoken](https://ngrok.com/docs#authtoken). For custom subdomains and more you should obtain an authtoken by [signing up at ngrok.com](https://ngrok.com). Once you set the authtoken, it is stored in ngrok config and used for all tunnels. You can set the authtoken directly:\n\n```javascript\nawait ngrok.authtoken(token);\n```\n\nOr pass the authtoken to the `connect` method like so:\n\n```javascript\nawait ngrok.connect({authtoken: token, ...});\n```\n\n### Connect\n\nThere are a number of ways to create a tunnel with ngrok using the `connect` method.\n\nBy default, `connect` will open an HTTP tunnel to port 80\n\n```javascript\nconst url = await ngrok.connect(); // https://757c1652.ngrok.io -> http://localhost:80\n```\n\nYou can pass the port number to `connect` to specify that port:\n\n```javascript\nconst url = await ngrok.connect(9090); // https://757c1652.ngrok.io -> http://localhost:9090\n```\n\nOr you can pass an object of options, for example:\n\n```javascript\nconst url = await ngrok.connect({proto: 'tcp', addr: 22}); // tcp://0.tcp.ngrok.io:48590\nconst url = await ngrok.connect(opts);\n```\n\n#### Options\n\nThere are many options that you can pass to `connect`, here are some examples:\n\n```javascript\nconst url = await ngrok.connect({\n  proto: 'http', // http|tcp|tls, defaults to http\n  addr: 8080, // port or network address, defaults to 80\n  auth: 'user:pwd', // http basic authentication for tunnel\n  subdomain: 'alex', // reserved tunnel name https://alex.ngrok.io\n  authtoken: '12345', // your authtoken from ngrok.com\n  region: 'us', // one of ngrok regions (us, eu, au, ap, sa, jp, in), defaults to us\n  configPath: '~/git/project/ngrok.yml', // custom path for ngrok config file\n  binPath: path => path.replace('app.asar', 'app.asar.unpacked'), // custom binary path, eg for prod in electron\n  onStatusChange: status => {}, // 'closed' - connection is lost, 'connected' - reconnected\n  onLogEvent: data => {}, // returns stdout messages from ngrok process\n});\n```\n\nSee [the ngrok documentation for all of the tunnel definition options](https://ngrok.com/docs#tunnel-definitions) including: `name, inspect, host_header, bind_tls, hostname, crt, key, client_cas, remote_addr`.\n\nNote on regions: the region used in the first tunnel will be used for all the following tunnels.\n\n### Disconnect\n\nThe ngrok process and all tunnels will be killed when node process is complete. To stop the tunnels manually use:\n\n```javascript\nawait ngrok.disconnect(url); // stops one\nawait ngrok.disconnect(); // stops all\nawait ngrok.kill(); // kills ngrok process\n```\n\nNote on HTTP tunnels: by default bind_tls is true, so whenever you use HTTP proto two tunnels are created - HTTP and HTTPS. If you disconnect the HTTPS tunnel, the HTTP tunnel remains open. You might want to close them both by passing the HTTP-version url, or simply by disconnecting all in one go `ngrok.disconnect()`.\n\n### Config\n\nYou can use ngrok's [configurations files](https://ngrok.com/docs#config), and pass `name` option when making a tunnel. Configuration files allow to store tunnel options. Ngrok looks for them here:\n\n```\nOS X\t/Users/example/.ngrok2/ngrok.yml\nLinux\t/home/example/.ngrok2/ngrok.yml\nWindows\tC:\\Users\\example\\.ngrok2\\ngrok.yml\n```\n\nYou can specify a custom `configPath` when making a tunnel.\n\n### Inspector\n\nWhen a tunnel is established you can use the ngrok interface hosted at http://127.0.0.1:4040 to inspect the webhooks made via ngrok.\n\nThe same URL hosts the internal [client api](https://ngrok.com/docs#client-api). This package exposes an API client that wraps the API which you can use to manage tunnels yourself.\n\n```javascript\nconst url = await ngrok.connect();\nconst api = ngrok.getApi();\nconst tunnels = await api.listTunnels();\n```\n\nYou can also get the URL of the internal API:\n\n```javascript\nconst url = await ngrok.connect();\nconst apiUrl = ngrok.getUrl();\n```\n\n### API\n\nThe API wrapper gives access to all the [ngrok client API](https://ngrok.com/docs#client-api) methods:\n\n```javascript\nconst url = await ngrok.connect();\nconst api = ngrok.getApi();\n```\n\n#### [List tunnels](https://ngrok.com/docs#list-tunnels)\n\n```javascript\nconst tunnels = await api.listTunnels();\n```\n\n#### [Start tunnel](https://ngrok.com/docs#start-tunnel)\n\n```javascript\nconst tunnel = await api.startTunnel(opts);\n```\n\n#### [Get tunnel details](https://ngrok.com/docs#tunnel-detail)\n\n```javascript\nconst tunnel = await api.tunnelDetail(tunnelName);\n```\n\n#### [Stop tunnel](https://ngrok.com/docs#stop-tunnel)\n\n```javascript\nawait api.stopTunnel(tunnelName);\n```\n\n#### [List requests](https://ngrok.com/docs#list-requests)\n\n```javascript\nawait api.listRequests(options);\n```\n\n#### [Replay request](https://ngrok.com/docs#replay-request)\n\n```javascript\nawait api.replayRequest(requestId, tunnelName);\n```\n\n#### [Delete all requests](https://ngrok.com/docs#delete-requests)\n\n```javascript\nawait api.deleteAllRequests();\n```\n\n#### [Request detail](https://ngrok.com/docs#request-detail)\n\n```javascript\nconst request = await api.requestDetail(requestId);\n```\n\n### Proxy\n\n- If you are behind a corporate proxy and have issues installing ngrok, you can set ```HTTPS_PROXY``` env var to fix it. ngrok's postinstall scripts uses the [`got`](https://www.npmjs.com/package/got) module to fetch the binary and the [`hpagent`](https://github.com/delvedor/hpagent) module to support HTTPS proxies. You will need to install the `hpagent` module as a dependency\n- If you are using a CA file, set the path in the environment variable `NGROK_ROOT_CA_PATH`. The path is needed for downloading the ngrok binary in the postinstall script\n\n## Expo changes\n\n### Get active process handle\n\nTo get a handle to the spawned ngrok process use\n```javascript\nngrok.getActiveProcess(); // returns ChildProcess\n```\n\n### Use @expo/ngrok-bin to manage ngrok binaries\n\nBenefit for versioning the binaries. The `binPath` option is unsupported then.\n\n## How it works\n\n```npm install``` downloads the ngrok binary for your platform from the official ngrok hosting. To host binaries yourself set the `NGROK_CDN_URL` environment variable before installing ngrok. To force specific platform set `NGROK_ARCH`, eg `NGROK_ARCH=freebsdia32`.\n\nThe first time you create a tunnel the ngrok process is spawned and runs until you disconnect or when the parent process is killed. All further tunnels are connected or disconnected through the internal ngrok API which usually runs on http://127.0.0.1:4040.\n\n## ngrok binary update\n\nIf you would like to force an update of the ngrok binary directly from your software, you can require the `ngrok/download` module and call the `downloadNgrok` function directly:\n\n```javascript\nconst downloadNgrok = require('ngrok/download');\ndownloadNgrok(myCallbackFunc, { ignoreCache: true });\n```\n\n## Using with nodemon\n\nIf you want your application to restart as you make changes to it, you may use [nodemon](https://nodemon.io/). This blog post shows [how to use nodemon and ngrok together so your server restarts but your tunnel doesn't](https://philna.sh/blog/2021/03/15/restart-app-not-tunnel-ngrok-nodemon/).\n\n## Contributors\n\nPlease run ```git update-index --assume-unchanged bin/ngrok``` to not override [ngrok stub](https://github.com/bubenshchykov/ngrok/blob/master/bin/ngrok) in your PR. Unfortunately it can't be gitignored.\n\nThe test suite covers the basic usage without an authtoken, as well as features available for free and paid authtokens. You can supply your own tokens as environment variables, otherwise a warning is given and some specs are ignored (locally and in PR builds). GitHub Actions supplies real tokens to master branch and runs all specs always.\n\n## Upgrading to version 4\n\nThe main impetus to update the package was to remove the dependency on the deprecated `request` module. `request` was replaced with `got`. Calls to the main `ngrok` functions, `connect`, `authtoken`, `disconnect`, `kill`, `getVersion` and `getUrl` respond the same as in version 3.\n\nUpdating the HTTP library, meant that the wrapped API would change, so a client class was created with methods for the available API calls. See the documentation above [for how to use the API client](#api).\n\nThe upside is that you no longer have to know the path to the API method you need. For example, to list the active tunnels in version 3 you would do:\n\n```javascript\nconst api = ngrok.getApi();\nconst tunnels = await api.get('api/tunnels');\n```\n\nNow you can call the `listTunnels` function:\n\n```javascript\nconst api = ngrok.getApi();\nconst tunnels = await api.listTunnels();\n```\n\n### TypeScript\n\nFrom version 3 to version 4 the bundled types were also overhauled. Most types live within the `Ngrok` namespace, particularly `Ngrok.Options` which replaces `INgrokOptions`.\n","engines":{"node":">=10.19.0"},"gitHead":"ae558edbabd9e116e7909aad12fe19188796dffc","scripts":{"test":"mocha --exit"},"_npmUser":{"name":"kudochien","email":"ckchien@gmail.com"},"repository":{"url":"git+https://github.com/expo/ngrok.git","type":"git"},"_npmVersion":"7.19.1","description":"node wrapper for ngrok","directories":{},"_nodeVersion":"16.5.0","dependencies":{"got":"^11.5.1","uuid":"^3.3.2","yaml":"^1.10.0","@expo/ngrok-bin":"2.3.40"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"chai":"^4.3.4","mocha":"^8.3.2","colors":"^1.4.0","@types/node":"^8.10.50"},"_npmOperationalInternal":{"tmp":"tmp/ngrok_4.1.0_1628071249112_0.026966954236308904","host":"s3://npm-registry-packages"}},"4.1.1":{"name":"@expo/ngrok","version":"4.1.1","keywords":["ngrok","localhost","tunneling","localtunnel","webhook"],"author":{"name":"bubenshchykov"},"license":"BSD-2-Clause","_id":"@expo/ngrok@4.1.1","maintainers":[{"name":"gabrieldonadel","email":"donadeldev@gmail.com"},{"name":"simek","email":"gosimek@gmail.com"},{"name":"keith-kurak","email":"keith@expo.io"},{"name":"christopherwalter","email":"chris@christopherwalter.com"},{"name":"kbrandwijk","email":"kim.brandwijk@gmail.com"},{"name":"fiber-god","email":"datwheat@gmail.com"},{"name":"ide","email":"ide+npm@jameside.com"},{"name":"brentvatne","email":"brentvatne@gmail.com"},{"name":"evanbacon","email":"baconbrix@gmail.com"},{"name":"quinlanj","email":"quinlanjung@gmail.com"},{"name":"expoadmin","email":"support@expo.io"},{"name":"tsapeta","email":"npm@tsapeta.com"},{"name":"dsokal","email":"dominiksokal@gmail.com"},{"name":"exponent","email":"exponent.team@gmail.com"},{"name":"wschurman","email":"wschurman@gmail.com"},{"name":"wkozyra","email":"wojciech.kozyra@swmansion.com"},{"name":"bycedric","email":"me@bycedric.com"},{"name":"lukmccall","email":"kosmatylukasz@gmail.com"},{"name":"jonsamp","email":"sampjon@gmail.com"},{"name":"princefleaswallow","email":"mhampton@hey.com"},{"name":"kudochien","email":"ckchien@gmail.com"}],"homepage":"https://github.com/expo/ngrok#readme","bugs":{"url":"https://github.com/expo/ngrok/issues"},"dist":{"shasum":"22491555d8784b97801f5c0b783a9d4d0cdd3def","tarball":"https://registry.npmjs.org/@expo/ngrok/-/ngrok-4.1.1.tgz","fileCount":7,"integrity":"sha512-br96pZz1frT9KkrzrIG4Y1Ih6SgOPpQs7Vo8n6p5V0oTUrjRStzTNKPM/ZCHfBgLr6KgobvJa5vBM5WjI9x7og==","signatures":[{"sig":"MEYCIQDeu+IQ0HQTIFaGI/bAB1qTSoaiIvwrCyybBL0CYKob8wIhAIhYQblcCwQYdZDzuofYu3GUUwbKoaN28HKYnELgU/i4","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":28118,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkQAYvACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmq5IQ/+ME7QQMXViX57d9RVAjZF+c4xDTezqDQ02iskLARVNlYAeGSD\r\n3qvnQSXFRY/NTB3VZDYL7fhnOGUQnGBIlRqdvn2xBgwjLRfq31Lil/hAZJaL\r\nsNRLd7za1QmbX0wctVwz/dqI3u5tSzZz/KaC/VerQb3vPHPVPoi8Gk/3vso+\r\nHi+iNXTOAu21PV6HhoTw2yUml2HemY/jcttWkmeVlugnrXM2v7+RySjdVNF5\r\nqrax3SQim21q6teSejpsrKO22Cb+jPRo+ltW60vsbUGQmtHaxG4zfUP9Mtqe\r\n6F+QqApEfIZGS9mNmS+KVPxkQZqdQo7juj5lpFMIcUM9ervEJcS5yA9IjsTI\r\nouhQZ4crTyFfSCyEN6oJOiYFcaETCoSnvMtAOQrQLjM0+dHpDmFgRsF+AcwF\r\n5ZVeVU10x9ZnLTZV+Pmu25yLReXPVqI46NMGgCEqS6H1Tby9LDNUpEAs3slH\r\nO0wLoNevhlg+9zRi3FPMwikcGX+m7O0ddH0mvo8AZMvYBHR5hgeybKyFsYMw\r\nXs0/NZIp7O5n9zIp+OuUA1NaSgrNw1aLprmBuJAi2AUAk7hL/1evZuob0p6F\r\nm6GRd/mPbLHXLRGfmo+ft1cXSQKyZuvKSdVSyGWkMrt4isfVvpUWnPkR5Ua/\r\nR3iskW9nfaCnI4DokAmLO3FjXif6z3+lo/Y=\r\n=S+OZ\r\n-----END PGP SIGNATURE-----\r\n"},"main":"index.js","types":"ngrok.d.ts","readme":"# ngrok [![Tests](https://github.com/bubenshchykov/ngrok/workflows/Tests/badge.svg)](https://github.com/bubenshchykov/ngrok/actions) ![TypeScript compatible](https://img.shields.io/badge/typescript-compatible-brightgreen.svg) [![npm](https://img.shields.io/npm/v/ngrok.svg)](https://www.npmjs.com/package/ngrok) [![npm](https://img.shields.io/npm/dm/ngrok.svg)](https://www.npmjs.com/package/ngrok)\n\n![alt ngrok.com](https://ngrok.com/static/img/overview.png)\n\n* [Usage](#usage)\n  * [Local install](#local-install)\n  * [Global install](#global-install)\n  * [Auth Token](#auth-token)\n  * [Connect](#connect)\n    * [Options](#options)\n  * [Disconnect](#disconnect)\n  * [Config](#config)\n  * [Inspector](#inspector)\n  * [API](#api)\n    * [List tunnels](#list-tunnels)\n    * [Start tunnel](#start-tunnel)\n    * [Get tunnel details](#get-tunnel-details)\n    * [Stop tunnel](#stop-tunnel)\n    * [List requests](#list-requests)\n    * [Replay request](#replay-request)\n    * [Delete all requests](#delete-all-requests)\n    * [Request detail](#request-detail)\n  * [Proxy](#proxy)\n* [Expo changes](#expo-changes)\n* [How it works](#how-it-works)\n* [ngrok binary update](#ngrok-binary-update)\n* [Using with nodemon](#using-with-nodemon)\n* [Contributors](#contributors)\n* [Upgrading to version 4](#upgrading-to-version-4)\n  * [TypeScript](#typescript)\n\n## Usage\n\n### Local install\n\nInstall the package with npm:\n\n```bash\nnpm install ngrok\n```\n\nThen use `ngrok.connect()` to start ngrok and open a tunnel.\n\n```javascript\nconst ngrok = require('ngrok');\n(async function() {\n  const url = await ngrok.connect();\n})();\n```\n\nThis module uses `node>=10.19.0` with async/await. For a callback-based version use [2.3.0](https://github.com/bubenshchykov/ngrok/blob/330674233e3ec77688bb692bf1eb007810c4e30d/README.md).\n\n### Global install\n\n```bash\nnpm install ngrok -g\nngrok http 8080\n```\n\nFor global install on Linux, you might need to run `sudo npm install --unsafe-perm -g ngrok` due to the [nature](https://github.com/bubenshchykov/ngrok/issues/115#issuecomment-380927124) of npm postinstall script.\n\n### Auth Token\nYou can create basic http-https-tcp tunnel without an [authtoken](https://ngrok.com/docs#authtoken). For custom subdomains and more you should obtain an authtoken by [signing up at ngrok.com](https://ngrok.com). Once you set the authtoken, it is stored in ngrok config and used for all tunnels. You can set the authtoken directly:\n\n```javascript\nawait ngrok.authtoken(token);\n```\n\nOr pass the authtoken to the `connect` method like so:\n\n```javascript\nawait ngrok.connect({authtoken: token, ...});\n```\n\n### Connect\n\nThere are a number of ways to create a tunnel with ngrok using the `connect` method.\n\nBy default, `connect` will open an HTTP tunnel to port 80\n\n```javascript\nconst url = await ngrok.connect(); // https://757c1652.ngrok.io -> http://localhost:80\n```\n\nYou can pass the port number to `connect` to specify that port:\n\n```javascript\nconst url = await ngrok.connect(9090); // https://757c1652.ngrok.io -> http://localhost:9090\n```\n\nOr you can pass an object of options, for example:\n\n```javascript\nconst url = await ngrok.connect({proto: 'tcp', addr: 22}); // tcp://0.tcp.ngrok.io:48590\nconst url = await ngrok.connect(opts);\n```\n\n#### Options\n\nThere are many options that you can pass to `connect`, here are some examples:\n\n```javascript\nconst url = await ngrok.connect({\n  proto: 'http', // http|tcp|tls, defaults to http\n  addr: 8080, // port or network address, defaults to 80\n  auth: 'user:pwd', // http basic authentication for tunnel\n  subdomain: 'alex', // reserved tunnel name https://alex.ngrok.io\n  authtoken: '12345', // your authtoken from ngrok.com\n  region: 'us', // one of ngrok regions (us, eu, au, ap, sa, jp, in), defaults to us\n  configPath: '~/git/project/ngrok.yml', // custom path for ngrok config file\n  binPath: path => path.replace('app.asar', 'app.asar.unpacked'), // custom binary path, eg for prod in electron\n  onStatusChange: status => {}, // 'closed' - connection is lost, 'connected' - reconnected\n  onLogEvent: data => {}, // returns stdout messages from ngrok process\n});\n```\n\nSee [the ngrok documentation for all of the tunnel definition options](https://ngrok.com/docs#tunnel-definitions) including: `name, inspect, host_header, bind_tls, hostname, crt, key, client_cas, remote_addr`.\n\nNote on regions: the region used in the first tunnel will be used for all the following tunnels.\n\n### Disconnect\n\nThe ngrok process and all tunnels will be killed when node process is complete. To stop the tunnels manually use:\n\n```javascript\nawait ngrok.disconnect(url); // stops one\nawait ngrok.disconnect(); // stops all\nawait ngrok.kill(); // kills ngrok process\n```\n\nNote on HTTP tunnels: by default bind_tls is true, so whenever you use HTTP proto two tunnels are created - HTTP and HTTPS. If you disconnect the HTTPS tunnel, the HTTP tunnel remains open. You might want to close them both by passing the HTTP-version url, or simply by disconnecting all in one go `ngrok.disconnect()`.\n\n### Config\n\nYou can use ngrok's [configurations files](https://ngrok.com/docs#config), and pass `name` option when making a tunnel. Configuration files allow to store tunnel options. Ngrok looks for them here:\n\n```\nOS X\t/Users/example/.ngrok2/ngrok.yml\nLinux\t/home/example/.ngrok2/ngrok.yml\nWindows\tC:\\Users\\example\\.ngrok2\\ngrok.yml\n```\n\nYou can specify a custom `configPath` when making a tunnel.\n\n### Inspector\n\nWhen a tunnel is established you can use the ngrok interface hosted at http://127.0.0.1:4040 to inspect the webhooks made via ngrok.\n\nThe same URL hosts the internal [client api](https://ngrok.com/docs#client-api). This package exposes an API client that wraps the API which you can use to manage tunnels yourself.\n\n```javascript\nconst url = await ngrok.connect();\nconst api = ngrok.getApi();\nconst tunnels = await api.listTunnels();\n```\n\nYou can also get the URL of the internal API:\n\n```javascript\nconst url = await ngrok.connect();\nconst apiUrl = ngrok.getUrl();\n```\n\n### API\n\nThe API wrapper gives access to all the [ngrok client API](https://ngrok.com/docs#client-api) methods:\n\n```javascript\nconst url = await ngrok.connect();\nconst api = ngrok.getApi();\n```\n\n#### [List tunnels](https://ngrok.com/docs#list-tunnels)\n\n```javascript\nconst tunnels = await api.listTunnels();\n```\n\n#### [Start tunnel](https://ngrok.com/docs#start-tunnel)\n\n```javascript\nconst tunnel = await api.startTunnel(opts);\n```\n\n#### [Get tunnel details](https://ngrok.com/docs#tunnel-detail)\n\n```javascript\nconst tunnel = await api.tunnelDetail(tunnelName);\n```\n\n#### [Stop tunnel](https://ngrok.com/docs#stop-tunnel)\n\n```javascript\nawait api.stopTunnel(tunnelName);\n```\n\n#### [List requests](https://ngrok.com/docs#list-requests)\n\n```javascript\nawait api.listRequests(options);\n```\n\n#### [Replay request](https://ngrok.com/docs#replay-request)\n\n```javascript\nawait api.replayRequest(requestId, tunnelName);\n```\n\n#### [Delete all requests](https://ngrok.com/docs#delete-requests)\n\n```javascript\nawait api.deleteAllRequests();\n```\n\n#### [Request detail](https://ngrok.com/docs#request-detail)\n\n```javascript\nconst request = await api.requestDetail(requestId);\n```\n\n### Proxy\n\n- If you are behind a corporate proxy and have issues installing ngrok, you can set ```HTTPS_PROXY``` env var to fix it. ngrok's postinstall scripts uses the [`got`](https://www.npmjs.com/package/got) module to fetch the binary and the [`hpagent`](https://github.com/delvedor/hpagent) module to support HTTPS proxies. You will need to install the `hpagent` module as a dependency\n- If you are using a CA file, set the path in the environment variable `NGROK_ROOT_CA_PATH`. The path is needed for downloading the ngrok binary in the postinstall script\n\n## Expo changes\n\n### Get active process handle\n\nTo get a handle to the spawned ngrok process use\n```javascript\nngrok.getActiveProcess(); // returns ChildProcess\n```\n\n### Use @expo/ngrok-bin to manage ngrok binaries\n\nBenefit for versioning the binaries. The `binPath` option is unsupported then.\n\n## How it works\n\n```npm install``` downloads the ngrok binary for your platform from the official ngrok hosting. To host binaries yourself set the `NGROK_CDN_URL` environment variable before installing ngrok. To force specific platform set `NGROK_ARCH`, eg `NGROK_ARCH=freebsdia32`.\n\nThe first time you create a tunnel the ngrok process is spawned and runs until you disconnect or when the parent process is killed. All further tunnels are connected or disconnected through the internal ngrok API which usually runs on http://127.0.0.1:4040.\n\n## ngrok binary update\n\nIf you would like to force an update of the ngrok binary directly from your software, you can require the `ngrok/download` module and call the `downloadNgrok` function directly:\n\n```javascript\nconst downloadNgrok = require('ngrok/download');\ndownloadNgrok(myCallbackFunc, { ignoreCache: true });\n```\n\n## Using with nodemon\n\nIf you want your application to restart as you make changes to it, you may use [nodemon](https://nodemon.io/). This blog post shows [how to use nodemon and ngrok together so your server restarts but your tunnel doesn't](https://philna.sh/blog/2021/03/15/restart-app-not-tunnel-ngrok-nodemon/).\n\n## Contributors\n\nPlease run ```git update-index --assume-unchanged bin/ngrok``` to not override [ngrok stub](https://github.com/bubenshchykov/ngrok/blob/master/bin/ngrok) in your PR. Unfortunately it can't be gitignored.\n\nThe test suite covers the basic usage without an authtoken, as well as features available for free and paid authtokens. You can supply your own tokens as environment variables, otherwise a warning is given and some specs are ignored (locally and in PR builds). GitHub Actions supplies real tokens to master branch and runs all specs always.\n\n## Upgrading to version 4\n\nThe main impetus to update the package was to remove the dependency on the deprecated `request` module. `request` was replaced with `got`. Calls to the main `ngrok` functions, `connect`, `authtoken`, `disconnect`, `kill`, `getVersion` and `getUrl` respond the same as in version 3.\n\nUpdating the HTTP library, meant that the wrapped API would change, so a client class was created with methods for the available API calls. See the documentation above [for how to use the API client](#api).\n\nThe upside is that you no longer have to know the path to the API method you need. For example, to list the active tunnels in version 3 you would do:\n\n```javascript\nconst api = ngrok.getApi();\nconst tunnels = await api.get('api/tunnels');\n```\n\nNow you can call the `listTunnels` function:\n\n```javascript\nconst api = ngrok.getApi();\nconst tunnels = await api.listTunnels();\n```\n\n### TypeScript\n\nFrom version 3 to version 4 the bundled types were also overhauled. Most types live within the `Ngrok` namespace, particularly `Ngrok.Options` which replaces `INgrokOptions`.\n","engines":{"node":">=10.19.0"},"gitHead":"7be892aa0d41c9670e52fcde55be717264becfaf","scripts":{"test":"mocha --exit"},"_npmUser":{"name":"brentvatne","email":"brentvatne@gmail.com"},"repository":{"url":"git+https://github.com/expo/ngrok.git","type":"git"},"_npmVersion":"8.19.2","description":"node wrapper for ngrok","directories":{},"_nodeVersion":"16.18.1","dependencies":{"got":"^11.5.1","uuid":"^3.3.2","yaml":"^1.10.0","@expo/ngrok-bin":"2.3.41"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"chai":"^4.3.4","mocha":"^8.3.2","colors":"^1.4.0","@types/node":"^8.10.50"},"_npmOperationalInternal":{"tmp":"tmp/ngrok_4.1.1_1681917487274_0.314741212390206","host":"s3://npm-registry-packages"}},"4.1.2":{"name":"@expo/ngrok","version":"4.1.2","keywords":["ngrok","localhost","tunneling","localtunnel","webhook"],"author":{"name":"bubenshchykov"},"license":"BSD-2-Clause","_id":"@expo/ngrok@4.1.2","maintainers":[{"name":"kadikraman","email":"hellokadi@gmail.com"},{"name":"radoslawkrzemien","email":"radoslaw.krzemien@swmansion.com"},{"name":"aleqsio","email":"mikucki@gmail.com"},{"name":"marklawlor","email":"mwlawlor@gmail.com"},{"name":"gabrieldonadel","email":"donadeldev@gmail.com"},{"name":"simek","email":"gosimek@gmail.com"},{"name":"keith-kurak","email":"keith@expo.io"},{"name":"christopherwalter","email":"chris@christopherwalter.com"},{"name":"kbrandwijk","email":"kim.brandwijk@gmail.com"},{"name":"fiber-god","email":"datwheat@gmail.com"},{"name":"ide","email":"ide+npm@jameside.com"},{"name":"brentvatne","email":"brentvatne@gmail.com"},{"name":"evanbacon","email":"baconbrix@gmail.com"},{"name":"quinlanj","email":"quinlanjung@gmail.com"},{"name":"expoadmin","email":"support@expo.io"},{"name":"tsapeta","email":"npm@tsapeta.com"},{"name":"exponent","email":"exponent.team@gmail.com"},{"name":"wschurman","email":"wschurman@gmail.com"},{"name":"wkozyra","email":"wojciech.kozyra@swmansion.com"},{"name":"bycedric","email":"me@bycedric.com"},{"name":"lukmccall","email":"kosmatylukasz@gmail.com"},{"name":"jonsamp","email":"sampjon@gmail.com"},{"name":"princefleaswallow","email":"mhampton@hey.com"},{"name":"kudochien","email":"ckchien@gmail.com"}],"homepage":"https://github.com/expo/ngrok#readme","bugs":{"url":"https://github.com/expo/ngrok/issues"},"dist":{"shasum":"dc027a35a17659f4b6f74400d1071da28f60cc27","tarball":"https://registry.npmjs.org/@expo/ngrok/-/ngrok-4.1.2.tgz","fileCount":7,"integrity":"sha512-rVWJvt7SdjeXOugM0VwvGjs9KETce2fKAr5W8qeyIXBX5bxCx15LyxrojC3YRRafOuMbljuBWE0TuWyz05e6mA==","signatures":[{"sig":"MEYCIQCrdv8QHByk8+/IcmBKSTiG6TSyZrrI7GROe6NIMlZIsgIhANfAzUpZ1Fqoz7z0dkSAplQuKishQGH0wkwsnw8T7vys","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":28118},"main":"index.js","types":"ngrok.d.ts","readme":"# ngrok [![Tests](https://github.com/bubenshchykov/ngrok/workflows/Tests/badge.svg)](https://github.com/bubenshchykov/ngrok/actions) ![TypeScript compatible](https://img.shields.io/badge/typescript-compatible-brightgreen.svg) [![npm](https://img.shields.io/npm/v/ngrok.svg)](https://www.npmjs.com/package/ngrok) [![npm](https://img.shields.io/npm/dm/ngrok.svg)](https://www.npmjs.com/package/ngrok)\n\n![alt ngrok.com](https://ngrok.com/static/img/overview.png)\n\n* [Usage](#usage)\n  * [Local install](#local-install)\n  * [Global install](#global-install)\n  * [Auth Token](#auth-token)\n  * [Connect](#connect)\n    * [Options](#options)\n  * [Disconnect](#disconnect)\n  * [Config](#config)\n  * [Inspector](#inspector)\n  * [API](#api)\n    * [List tunnels](#list-tunnels)\n    * [Start tunnel](#start-tunnel)\n    * [Get tunnel details](#get-tunnel-details)\n    * [Stop tunnel](#stop-tunnel)\n    * [List requests](#list-requests)\n    * [Replay request](#replay-request)\n    * [Delete all requests](#delete-all-requests)\n    * [Request detail](#request-detail)\n  * [Proxy](#proxy)\n* [Expo changes](#expo-changes)\n* [How it works](#how-it-works)\n* [ngrok binary update](#ngrok-binary-update)\n* [Using with nodemon](#using-with-nodemon)\n* [Contributors](#contributors)\n* [Upgrading to version 4](#upgrading-to-version-4)\n  * [TypeScript](#typescript)\n\n## Usage\n\n### Local install\n\nInstall the package with npm:\n\n```bash\nnpm install ngrok\n```\n\nThen use `ngrok.connect()` to start ngrok and open a tunnel.\n\n```javascript\nconst ngrok = require('ngrok');\n(async function() {\n  const url = await ngrok.connect();\n})();\n```\n\nThis module uses `node>=10.19.0` with async/await. For a callback-based version use [2.3.0](https://github.com/bubenshchykov/ngrok/blob/330674233e3ec77688bb692bf1eb007810c4e30d/README.md).\n\n### Global install\n\n```bash\nnpm install ngrok -g\nngrok http 8080\n```\n\nFor global install on Linux, you might need to run `sudo npm install --unsafe-perm -g ngrok` due to the [nature](https://github.com/bubenshchykov/ngrok/issues/115#issuecomment-380927124) of npm postinstall script.\n\n### Auth Token\nYou can create basic http-https-tcp tunnel without an [authtoken](https://ngrok.com/docs#authtoken). For custom subdomains and more you should obtain an authtoken by [signing up at ngrok.com](https://ngrok.com). Once you set the authtoken, it is stored in ngrok config and used for all tunnels. You can set the authtoken directly:\n\n```javascript\nawait ngrok.authtoken(token);\n```\n\nOr pass the authtoken to the `connect` method like so:\n\n```javascript\nawait ngrok.connect({authtoken: token, ...});\n```\n\n### Connect\n\nThere are a number of ways to create a tunnel with ngrok using the `connect` method.\n\nBy default, `connect` will open an HTTP tunnel to port 80\n\n```javascript\nconst url = await ngrok.connect(); // https://757c1652.ngrok.io -> http://localhost:80\n```\n\nYou can pass the port number to `connect` to specify that port:\n\n```javascript\nconst url = await ngrok.connect(9090); // https://757c1652.ngrok.io -> http://localhost:9090\n```\n\nOr you can pass an object of options, for example:\n\n```javascript\nconst url = await ngrok.connect({proto: 'tcp', addr: 22}); // tcp://0.tcp.ngrok.io:48590\nconst url = await ngrok.connect(opts);\n```\n\n#### Options\n\nThere are many options that you can pass to `connect`, here are some examples:\n\n```javascript\nconst url = await ngrok.connect({\n  proto: 'http', // http|tcp|tls, defaults to http\n  addr: 8080, // port or network address, defaults to 80\n  auth: 'user:pwd', // http basic authentication for tunnel\n  subdomain: 'alex', // reserved tunnel name https://alex.ngrok.io\n  authtoken: '12345', // your authtoken from ngrok.com\n  region: 'us', // one of ngrok regions (us, eu, au, ap, sa, jp, in), defaults to us\n  configPath: '~/git/project/ngrok.yml', // custom path for ngrok config file\n  binPath: path => path.replace('app.asar', 'app.asar.unpacked'), // custom binary path, eg for prod in electron\n  onStatusChange: status => {}, // 'closed' - connection is lost, 'connected' - reconnected\n  onLogEvent: data => {}, // returns stdout messages from ngrok process\n});\n```\n\nSee [the ngrok documentation for all of the tunnel definition options](https://ngrok.com/docs#tunnel-definitions) including: `name, inspect, host_header, bind_tls, hostname, crt, key, client_cas, remote_addr`.\n\nNote on regions: the region used in the first tunnel will be used for all the following tunnels.\n\n### Disconnect\n\nThe ngrok process and all tunnels will be killed when node process is complete. To stop the tunnels manually use:\n\n```javascript\nawait ngrok.disconnect(url); // stops one\nawait ngrok.disconnect(); // stops all\nawait ngrok.kill(); // kills ngrok process\n```\n\nNote on HTTP tunnels: by default bind_tls is true, so whenever you use HTTP proto two tunnels are created - HTTP and HTTPS. If you disconnect the HTTPS tunnel, the HTTP tunnel remains open. You might want to close them both by passing the HTTP-version url, or simply by disconnecting all in one go `ngrok.disconnect()`.\n\n### Config\n\nYou can use ngrok's [configurations files](https://ngrok.com/docs#config), and pass `name` option when making a tunnel. Configuration files allow to store tunnel options. Ngrok looks for them here:\n\n```\nOS X\t/Users/example/.ngrok2/ngrok.yml\nLinux\t/home/example/.ngrok2/ngrok.yml\nWindows\tC:\\Users\\example\\.ngrok2\\ngrok.yml\n```\n\nYou can specify a custom `configPath` when making a tunnel.\n\n### Inspector\n\nWhen a tunnel is established you can use the ngrok interface hosted at http://127.0.0.1:4040 to inspect the webhooks made via ngrok.\n\nThe same URL hosts the internal [client api](https://ngrok.com/docs#client-api). This package exposes an API client that wraps the API which you can use to manage tunnels yourself.\n\n```javascript\nconst url = await ngrok.connect();\nconst api = ngrok.getApi();\nconst tunnels = await api.listTunnels();\n```\n\nYou can also get the URL of the internal API:\n\n```javascript\nconst url = await ngrok.connect();\nconst apiUrl = ngrok.getUrl();\n```\n\n### API\n\nThe API wrapper gives access to all the [ngrok client API](https://ngrok.com/docs#client-api) methods:\n\n```javascript\nconst url = await ngrok.connect();\nconst api = ngrok.getApi();\n```\n\n#### [List tunnels](https://ngrok.com/docs#list-tunnels)\n\n```javascript\nconst tunnels = await api.listTunnels();\n```\n\n#### [Start tunnel](https://ngrok.com/docs#start-tunnel)\n\n```javascript\nconst tunnel = await api.startTunnel(opts);\n```\n\n#### [Get tunnel details](https://ngrok.com/docs#tunnel-detail)\n\n```javascript\nconst tunnel = await api.tunnelDetail(tunnelName);\n```\n\n#### [Stop tunnel](https://ngrok.com/docs#stop-tunnel)\n\n```javascript\nawait api.stopTunnel(tunnelName);\n```\n\n#### [List requests](https://ngrok.com/docs#list-requests)\n\n```javascript\nawait api.listRequests(options);\n```\n\n#### [Replay request](https://ngrok.com/docs#replay-request)\n\n```javascript\nawait api.replayRequest(requestId, tunnelName);\n```\n\n#### [Delete all requests](https://ngrok.com/docs#delete-requests)\n\n```javascript\nawait api.deleteAllRequests();\n```\n\n#### [Request detail](https://ngrok.com/docs#request-detail)\n\n```javascript\nconst request = await api.requestDetail(requestId);\n```\n\n### Proxy\n\n- If you are behind a corporate proxy and have issues installing ngrok, you can set ```HTTPS_PROXY``` env var to fix it. ngrok's postinstall scripts uses the [`got`](https://www.npmjs.com/package/got) module to fetch the binary and the [`hpagent`](https://github.com/delvedor/hpagent) module to support HTTPS proxies. You will need to install the `hpagent` module as a dependency\n- If you are using a CA file, set the path in the environment variable `NGROK_ROOT_CA_PATH`. The path is needed for downloading the ngrok binary in the postinstall script\n\n## Expo changes\n\n### Get active process handle\n\nTo get a handle to the spawned ngrok process use\n```javascript\nngrok.getActiveProcess(); // returns ChildProcess\n```\n\n### Use @expo/ngrok-bin to manage ngrok binaries\n\nBenefit for versioning the binaries. The `binPath` option is unsupported then.\n\n## How it works\n\n```npm install``` downloads the ngrok binary for your platform from the official ngrok hosting. To host binaries yourself set the `NGROK_CDN_URL` environment variable before installing ngrok. To force specific platform set `NGROK_ARCH`, eg `NGROK_ARCH=freebsdia32`.\n\nThe first time you create a tunnel the ngrok process is spawned and runs until you disconnect or when the parent process is killed. All further tunnels are connected or disconnected through the internal ngrok API which usually runs on http://127.0.0.1:4040.\n\n## ngrok binary update\n\nIf you would like to force an update of the ngrok binary directly from your software, you can require the `ngrok/download` module and call the `downloadNgrok` function directly:\n\n```javascript\nconst downloadNgrok = require('ngrok/download');\ndownloadNgrok(myCallbackFunc, { ignoreCache: true });\n```\n\n## Using with nodemon\n\nIf you want your application to restart as you make changes to it, you may use [nodemon](https://nodemon.io/). This blog post shows [how to use nodemon and ngrok together so your server restarts but your tunnel doesn't](https://philna.sh/blog/2021/03/15/restart-app-not-tunnel-ngrok-nodemon/).\n\n## Contributors\n\nPlease run ```git update-index --assume-unchanged bin/ngrok``` to not override [ngrok stub](https://github.com/bubenshchykov/ngrok/blob/master/bin/ngrok) in your PR. Unfortunately it can't be gitignored.\n\nThe test suite covers the basic usage without an authtoken, as well as features available for free and paid authtokens. You can supply your own tokens as environment variables, otherwise a warning is given and some specs are ignored (locally and in PR builds). GitHub Actions supplies real tokens to master branch and runs all specs always.\n\n## Upgrading to version 4\n\nThe main impetus to update the package was to remove the dependency on the deprecated `request` module. `request` was replaced with `got`. Calls to the main `ngrok` functions, `connect`, `authtoken`, `disconnect`, `kill`, `getVersion` and `getUrl` respond the same as in version 3.\n\nUpdating the HTTP library, meant that the wrapped API would change, so a client class was created with methods for the available API calls. See the documentation above [for how to use the API client](#api).\n\nThe upside is that you no longer have to know the path to the API method you need. For example, to list the active tunnels in version 3 you would do:\n\n```javascript\nconst api = ngrok.getApi();\nconst tunnels = await api.get('api/tunnels');\n```\n\nNow you can call the `listTunnels` function:\n\n```javascript\nconst api = ngrok.getApi();\nconst tunnels = await api.listTunnels();\n```\n\n### TypeScript\n\nFrom version 3 to version 4 the bundled types were also overhauled. Most types live within the `Ngrok` namespace, particularly `Ngrok.Options` which replaces `INgrokOptions`.\n","engines":{"node":">=10.19.0"},"gitHead":"6efe1cf9fc96a0ff856f508758986c267045b694","scripts":{"test":"mocha --exit"},"_npmUser":{"name":"tsapeta","email":"npm@tsapeta.com"},"repository":{"url":"git+https://github.com/expo/ngrok.git","type":"git"},"_npmVersion":"10.2.0","description":"node wrapper for ngrok","directories":{},"_nodeVersion":"21.1.0","dependencies":{"got":"^11.5.1","uuid":"^3.3.2","yaml":"^1.10.0","@expo/ngrok-bin":"2.3.41"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"chai":"^4.3.4","mocha":"^8.3.2","colors":"^1.4.0","@types/node":"^8.10.50"},"_npmOperationalInternal":{"tmp":"tmp/ngrok_4.1.2_1700220866515_0.8500981126590696","host":"s3://npm-registry-packages"}},"4.1.3":{"name":"@expo/ngrok","version":"4.1.3","keywords":["ngrok","localhost","tunneling","localtunnel","webhook"],"author":{"name":"bubenshchykov"},"license":"BSD-2-Clause","_id":"@expo/ngrok@4.1.3","maintainers":[{"name":"kadikraman","email":"hellokadi@gmail.com"},{"name":"radoslawkrzemien","email":"radoslaw.krzemien@swmansion.com"},{"name":"aleqsio","email":"mikucki@gmail.com"},{"name":"marklawlor","email":"mwlawlor@gmail.com"},{"name":"gabrieldonadel","email":"donadeldev@gmail.com"},{"name":"simek","email":"gosimek@gmail.com"},{"name":"keith-kurak","email":"keith@expo.io"},{"name":"christopherwalter","email":"chris@christopherwalter.com"},{"name":"kbrandwijk","email":"kim.brandwijk@gmail.com"},{"name":"fiber-god","email":"datwheat@gmail.com"},{"name":"ide","email":"ide+npm@jameside.com"},{"name":"brentvatne","email":"brentvatne@gmail.com"},{"name":"evanbacon","email":"baconbrix@gmail.com"},{"name":"quinlanj","email":"quinlanjung@gmail.com"},{"name":"expoadmin","email":"support@expo.io"},{"name":"tsapeta","email":"npm@tsapeta.com"},{"name":"exponent","email":"exponent.team@gmail.com"},{"name":"wschurman","email":"wschurman@gmail.com"},{"name":"wkozyra","email":"wojciech.kozyra@swmansion.com"},{"name":"bycedric","email":"me@bycedric.com"},{"name":"lukmccall","email":"kosmatylukasz@gmail.com"},{"name":"jonsamp","email":"sampjon@gmail.com"},{"name":"princefleaswallow","email":"mhampton@hey.com"},{"name":"kudochien","email":"ckchien@gmail.com"}],"homepage":"https://github.com/expo/ngrok#readme","bugs":{"url":"https://github.com/expo/ngrok/issues"},"dist":{"shasum":"a3dc692958f3f48a5221e30f4a8c3648c79e8450","tarball":"https://registry.npmjs.org/@expo/ngrok/-/ngrok-4.1.3.tgz","fileCount":7,"integrity":"sha512-AESYaROGIGKWwWmUyQoUXcbvaUZjmpecC5buArXxYou+RID813F8T0Y5jQ2HUY49mZpYfJiy9oh4VSN37GgrXA==","signatures":[{"sig":"MEYCIQC6LP11Hfb/MIkrcbVxtHnj+P/ymxKBaAyHe6vzr5fRFgIhAJA2m4Um1LLxEofpUIp018KVubzTPurjQv96iBgkcRCJ","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":28118},"main":"index.js","types":"ngrok.d.ts","readme":"# ngrok [![Tests](https://github.com/bubenshchykov/ngrok/workflows/Tests/badge.svg)](https://github.com/bubenshchykov/ngrok/actions) ![TypeScript compatible](https://img.shields.io/badge/typescript-compatible-brightgreen.svg) [![npm](https://img.shields.io/npm/v/ngrok.svg)](https://www.npmjs.com/package/ngrok) [![npm](https://img.shields.io/npm/dm/ngrok.svg)](https://www.npmjs.com/package/ngrok)\n\n![alt ngrok.com](https://ngrok.com/static/img/overview.png)\n\n* [Usage](#usage)\n  * [Local install](#local-install)\n  * [Global install](#global-install)\n  * [Auth Token](#auth-token)\n  * [Connect](#connect)\n    * [Options](#options)\n  * [Disconnect](#disconnect)\n  * [Config](#config)\n  * [Inspector](#inspector)\n  * [API](#api)\n    * [List tunnels](#list-tunnels)\n    * [Start tunnel](#start-tunnel)\n    * [Get tunnel details](#get-tunnel-details)\n    * [Stop tunnel](#stop-tunnel)\n    * [List requests](#list-requests)\n    * [Replay request](#replay-request)\n    * [Delete all requests](#delete-all-requests)\n    * [Request detail](#request-detail)\n  * [Proxy](#proxy)\n* [Expo changes](#expo-changes)\n* [How it works](#how-it-works)\n* [ngrok binary update](#ngrok-binary-update)\n* [Using with nodemon](#using-with-nodemon)\n* [Contributors](#contributors)\n* [Upgrading to version 4](#upgrading-to-version-4)\n  * [TypeScript](#typescript)\n\n## Usage\n\n### Local install\n\nInstall the package with npm:\n\n```bash\nnpm install ngrok\n```\n\nThen use `ngrok.connect()` to start ngrok and open a tunnel.\n\n```javascript\nconst ngrok = require('ngrok');\n(async function() {\n  const url = await ngrok.connect();\n})();\n```\n\nThis module uses `node>=10.19.0` with async/await. For a callback-based version use [2.3.0](https://github.com/bubenshchykov/ngrok/blob/330674233e3ec77688bb692bf1eb007810c4e30d/README.md).\n\n### Global install\n\n```bash\nnpm install ngrok -g\nngrok http 8080\n```\n\nFor global install on Linux, you might need to run `sudo npm install --unsafe-perm -g ngrok` due to the [nature](https://github.com/bubenshchykov/ngrok/issues/115#issuecomment-380927124) of npm postinstall script.\n\n### Auth Token\nYou can create basic http-https-tcp tunnel without an [authtoken](https://ngrok.com/docs#authtoken). For custom subdomains and more you should obtain an authtoken by [signing up at ngrok.com](https://ngrok.com). Once you set the authtoken, it is stored in ngrok config and used for all tunnels. You can set the authtoken directly:\n\n```javascript\nawait ngrok.authtoken(token);\n```\n\nOr pass the authtoken to the `connect` method like so:\n\n```javascript\nawait ngrok.connect({authtoken: token, ...});\n```\n\n### Connect\n\nThere are a number of ways to create a tunnel with ngrok using the `connect` method.\n\nBy default, `connect` will open an HTTP tunnel to port 80\n\n```javascript\nconst url = await ngrok.connect(); // https://757c1652.ngrok.io -> http://localhost:80\n```\n\nYou can pass the port number to `connect` to specify that port:\n\n```javascript\nconst url = await ngrok.connect(9090); // https://757c1652.ngrok.io -> http://localhost:9090\n```\n\nOr you can pass an object of options, for example:\n\n```javascript\nconst url = await ngrok.connect({proto: 'tcp', addr: 22}); // tcp://0.tcp.ngrok.io:48590\nconst url = await ngrok.connect(opts);\n```\n\n#### Options\n\nThere are many options that you can pass to `connect`, here are some examples:\n\n```javascript\nconst url = await ngrok.connect({\n  proto: 'http', // http|tcp|tls, defaults to http\n  addr: 8080, // port or network address, defaults to 80\n  auth: 'user:pwd', // http basic authentication for tunnel\n  subdomain: 'alex', // reserved tunnel name https://alex.ngrok.io\n  authtoken: '12345', // your authtoken from ngrok.com\n  region: 'us', // one of ngrok regions (us, eu, au, ap, sa, jp, in), defaults to us\n  configPath: '~/git/project/ngrok.yml', // custom path for ngrok config file\n  binPath: path => path.replace('app.asar', 'app.asar.unpacked'), // custom binary path, eg for prod in electron\n  onStatusChange: status => {}, // 'closed' - connection is lost, 'connected' - reconnected\n  onLogEvent: data => {}, // returns stdout messages from ngrok process\n});\n```\n\nSee [the ngrok documentation for all of the tunnel definition options](https://ngrok.com/docs#tunnel-definitions) including: `name, inspect, host_header, bind_tls, hostname, crt, key, client_cas, remote_addr`.\n\nNote on regions: the region used in the first tunnel will be used for all the following tunnels.\n\n### Disconnect\n\nThe ngrok process and all tunnels will be killed when node process is complete. To stop the tunnels manually use:\n\n```javascript\nawait ngrok.disconnect(url); // stops one\nawait ngrok.disconnect(); // stops all\nawait ngrok.kill(); // kills ngrok process\n```\n\nNote on HTTP tunnels: by default bind_tls is true, so whenever you use HTTP proto two tunnels are created - HTTP and HTTPS. If you disconnect the HTTPS tunnel, the HTTP tunnel remains open. You might want to close them both by passing the HTTP-version url, or simply by disconnecting all in one go `ngrok.disconnect()`.\n\n### Config\n\nYou can use ngrok's [configurations files](https://ngrok.com/docs#config), and pass `name` option when making a tunnel. Configuration files allow to store tunnel options. Ngrok looks for them here:\n\n```\nOS X\t/Users/example/.ngrok2/ngrok.yml\nLinux\t/home/example/.ngrok2/ngrok.yml\nWindows\tC:\\Users\\example\\.ngrok2\\ngrok.yml\n```\n\nYou can specify a custom `configPath` when making a tunnel.\n\n### Inspector\n\nWhen a tunnel is established you can use the ngrok interface hosted at http://127.0.0.1:4040 to inspect the webhooks made via ngrok.\n\nThe same URL hosts the internal [client api](https://ngrok.com/docs#client-api). This package exposes an API client that wraps the API which you can use to manage tunnels yourself.\n\n```javascript\nconst url = await ngrok.connect();\nconst api = ngrok.getApi();\nconst tunnels = await api.listTunnels();\n```\n\nYou can also get the URL of the internal API:\n\n```javascript\nconst url = await ngrok.connect();\nconst apiUrl = ngrok.getUrl();\n```\n\n### API\n\nThe API wrapper gives access to all the [ngrok client API](https://ngrok.com/docs#client-api) methods:\n\n```javascript\nconst url = await ngrok.connect();\nconst api = ngrok.getApi();\n```\n\n#### [List tunnels](https://ngrok.com/docs#list-tunnels)\n\n```javascript\nconst tunnels = await api.listTunnels();\n```\n\n#### [Start tunnel](https://ngrok.com/docs#start-tunnel)\n\n```javascript\nconst tunnel = await api.startTunnel(opts);\n```\n\n#### [Get tunnel details](https://ngrok.com/docs#tunnel-detail)\n\n```javascript\nconst tunnel = await api.tunnelDetail(tunnelName);\n```\n\n#### [Stop tunnel](https://ngrok.com/docs#stop-tunnel)\n\n```javascript\nawait api.stopTunnel(tunnelName);\n```\n\n#### [List requests](https://ngrok.com/docs#list-requests)\n\n```javascript\nawait api.listRequests(options);\n```\n\n#### [Replay request](https://ngrok.com/docs#replay-request)\n\n```javascript\nawait api.replayRequest(requestId, tunnelName);\n```\n\n#### [Delete all requests](https://ngrok.com/docs#delete-requests)\n\n```javascript\nawait api.deleteAllRequests();\n```\n\n#### [Request detail](https://ngrok.com/docs#request-detail)\n\n```javascript\nconst request = await api.requestDetail(requestId);\n```\n\n### Proxy\n\n- If you are behind a corporate proxy and have issues installing ngrok, you can set ```HTTPS_PROXY``` env var to fix it. ngrok's postinstall scripts uses the [`got`](https://www.npmjs.com/package/got) module to fetch the binary and the [`hpagent`](https://github.com/delvedor/hpagent) module to support HTTPS proxies. You will need to install the `hpagent` module as a dependency\n- If you are using a CA file, set the path in the environment variable `NGROK_ROOT_CA_PATH`. The path is needed for downloading the ngrok binary in the postinstall script\n\n## Expo changes\n\n### Get active process handle\n\nTo get a handle to the spawned ngrok process use\n```javascript\nngrok.getActiveProcess(); // returns ChildProcess\n```\n\n### Use @expo/ngrok-bin to manage ngrok binaries\n\nBenefit for versioning the binaries. The `binPath` option is unsupported then.\n\n## How it works\n\n```npm install``` downloads the ngrok binary for your platform from the official ngrok hosting. To host binaries yourself set the `NGROK_CDN_URL` environment variable before installing ngrok. To force specific platform set `NGROK_ARCH`, eg `NGROK_ARCH=freebsdia32`.\n\nThe first time you create a tunnel the ngrok process is spawned and runs until you disconnect or when the parent process is killed. All further tunnels are connected or disconnected through the internal ngrok API which usually runs on http://127.0.0.1:4040.\n\n## ngrok binary update\n\nIf you would like to force an update of the ngrok binary directly from your software, you can require the `ngrok/download` module and call the `downloadNgrok` function directly:\n\n```javascript\nconst downloadNgrok = require('ngrok/download');\ndownloadNgrok(myCallbackFunc, { ignoreCache: true });\n```\n\n## Using with nodemon\n\nIf you want your application to restart as you make changes to it, you may use [nodemon](https://nodemon.io/). This blog post shows [how to use nodemon and ngrok together so your server restarts but your tunnel doesn't](https://philna.sh/blog/2021/03/15/restart-app-not-tunnel-ngrok-nodemon/).\n\n## Contributors\n\nPlease run ```git update-index --assume-unchanged bin/ngrok``` to not override [ngrok stub](https://github.com/bubenshchykov/ngrok/blob/master/bin/ngrok) in your PR. Unfortunately it can't be gitignored.\n\nThe test suite covers the basic usage without an authtoken, as well as features available for free and paid authtokens. You can supply your own tokens as environment variables, otherwise a warning is given and some specs are ignored (locally and in PR builds). GitHub Actions supplies real tokens to master branch and runs all specs always.\n\n## Upgrading to version 4\n\nThe main impetus to update the package was to remove the dependency on the deprecated `request` module. `request` was replaced with `got`. Calls to the main `ngrok` functions, `connect`, `authtoken`, `disconnect`, `kill`, `getVersion` and `getUrl` respond the same as in version 3.\n\nUpdating the HTTP library, meant that the wrapped API would change, so a client class was created with methods for the available API calls. See the documentation above [for how to use the API client](#api).\n\nThe upside is that you no longer have to know the path to the API method you need. For example, to list the active tunnels in version 3 you would do:\n\n```javascript\nconst api = ngrok.getApi();\nconst tunnels = await api.get('api/tunnels');\n```\n\nNow you can call the `listTunnels` function:\n\n```javascript\nconst api = ngrok.getApi();\nconst tunnels = await api.listTunnels();\n```\n\n### TypeScript\n\nFrom version 3 to version 4 the bundled types were also overhauled. Most types live within the `Ngrok` namespace, particularly `Ngrok.Options` which replaces `INgrokOptions`.\n","engines":{"node":">=10.19.0"},"gitHead":"5a8015b555863cb63afdf770f3b81a61eaae5266","scripts":{"test":"mocha --exit"},"_npmUser":{"name":"tsapeta","email":"npm@tsapeta.com"},"repository":{"url":"git+https://github.com/expo/ngrok.git","type":"git"},"_npmVersion":"10.2.0","description":"node wrapper for ngrok","directories":{},"_nodeVersion":"21.1.0","dependencies":{"got":"^11.5.1","uuid":"^3.3.2","yaml":"^1.10.0","@expo/ngrok-bin":"2.3.42"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"chai":"^4.3.4","mocha":"^8.3.2","colors":"^1.4.0","@types/node":"^8.10.50"},"_npmOperationalInternal":{"tmp":"tmp/ngrok_4.1.3_1700221070712_0.16877981913916518","host":"s3://npm-registry-packages"}}},"time":{"created":"2017-07-03T22:17:59.201Z","modified":"2024-09-12T05:32:03.267Z","2.2.7":"2017-07-03T22:17:59.201Z","2.2.8":"2017-08-08T20:56:10.663Z","2.2.9":"2017-08-11T18:32:43.989Z","2.3.0":"2017-11-16T18:48:43.477Z","2.4.0":"2018-03-15T15:08:27.126Z","2.4.1":"2018-03-15T15:33:34.073Z","2.4.2":"2018-03-16T14:40:16.052Z","2.4.3":"2018-12-03T13:42:58.310Z","2.5.0":"2021-06-11T18:12:50.443Z","4.1.0":"2021-08-04T10:00:49.267Z","4.1.1":"2023-04-19T15:18:07.437Z","4.1.2":"2023-11-17T11:34:26.661Z","4.1.3":"2023-11-17T11:37:50.936Z"},"bugs":{"url":"https://github.com/expo/ngrok/issues"},"author":{"name":"bubenshchykov"},"license":"BSD-2-Clause","homepage":"https://github.com/expo/ngrok#readme","keywords":["ngrok","localhost","tunneling","localtunnel","webhook"],"repository":{"url":"git+https://github.com/expo/ngrok.git","type":"git"},"description":"node wrapper for ngrok","maintainers":[{"email":"douglowder@mac.com","name":"douglowder"},{"email":"beto@expo.io","name":"betoatexpo"},{"email":"phil@kitten.sh","name":"philpl"},{"email":"brent+expobotnpm@expo.io","name":"expo-bot"},{"email":"szymon.dziedzic@swmansion.com","name":"szdziedzic"},{"email":"hughesno1@gmail.com","name":"alanhughes"},{"email":"hellokadi@gmail.com","name":"kadikraman"},{"email":"radoslaw.krzemien@swmansion.com","name":"radoslawkrzemien"},{"email":"mikucki@gmail.com","name":"aleqsio"},{"email":"mwlawlor@gmail.com","name":"marklawlor"},{"email":"donadeldev@gmail.com","name":"gabrieldonadel"},{"email":"gosimek@gmail.com","name":"simek"},{"email":"keith@expo.io","name":"keith-kurak"},{"email":"datwheat@gmail.com","name":"fiber-god"},{"email":"ide+npm@jameside.com","name":"ide"},{"email":"brentvatne@gmail.com","name":"brentvatne"},{"email":"baconbrix@gmail.com","name":"evanbacon"},{"email":"quinlanjung@gmail.com","name":"quinlanj"},{"email":"support@expo.io","name":"expoadmin"},{"email":"npm@tsapeta.com","name":"tsapeta"},{"email":"exponent.team@gmail.com","name":"exponent"},{"email":"wschurman@gmail.com","name":"wschurman"},{"email":"me@bycedric.com","name":"bycedric"},{"email":"kosmatylukasz@gmail.com","name":"lukmccall"},{"email":"sampjon@gmail.com","name":"jonsamp"},{"email":"mhampton@hey.com","name":"princefleaswallow"},{"email":"ckchien@gmail.com","name":"kudochien"}],"readme":"","readmeFilename":""}